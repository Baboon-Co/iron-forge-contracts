name: Generate & Publish C# contracts
on:
  workflow_call:
    inputs:
      service:
        description: 'Имя сервиса (папка в protos), напр. auth-service'
        required: true
        type: string
      version:
        description: 'Версия пакета, например 1.2.3'
        required: true
        type: string

jobs:
  client-and-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup .NET 9
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.x

      # Client
      - name: Restore & Build Client
        run: |
          dotnet restore src/csharp/client.csproj \
            /p:ProtoDir=protos \
            /p:ServiceName=${{ inputs.service }} \
            /p:Version=${{ inputs.version }}
          dotnet build src/csharp/client.csproj -c Release \
            /p:ProtoDir=protos \
            /p:ServiceName=${{ inputs.service }} \
            /p:Version=${{ inputs.version }}

      - name: Pack Client
        run: |
          dotnet pack src/csharp/client.csproj \
            --no-build -c Release \
            -o artifacts/client \
            /p:ProtoDir=protos \
            /p:ServiceName=${{ inputs.service }} \
            /p:Version=${{ inputs.version }}

      - name: Publish Client to GitHub Packages
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget push artifacts/client/*.nupkg \
            --source "https://nuget.pkg.github.com/baboon-co/index.json" \
            --api-key ${NUGET_AUTH_TOKEN}

      # Server
      - name: Restore & Build Server
        run: |
          dotnet restore src/csharp/server.csproj \
            /p:ProtoDir=protos \
            /p:ServiceName=${{ inputs.service }} \
            /p:Version=${{ inputs.version }}
          dotnet build src/csharp/server.csproj -c Release \
            /p:ProtoDir=protos \
            /p:ServiceName=${{ inputs.service }} \
            /p:Version=${{ inputs.version }}

      - name: Pack Server
        run: |
          dotnet pack src/csharp/server.csproj \
            --no-build -c Release \
            -o artifacts/server \
            /p:ProtoDir=protos \
            /p:ServiceName=${{ inputs.service }} \
            /p:Version=${{ inputs.version }}

      - name: Publish Server to GitHub Packages
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet nuget push artifacts/server/*.nupkg \
            --source "https://nuget.pkg.github.com/baboon-co/index.json" \
            --api-key ${NUGET_AUTH_TOKEN}

# TODO: для других языков (go, java, ts…) заведите свои workflows generate-go.yml, generate-java.yml и т.д.
